services:
  postgres:
    image: pgvector/pgvector:pg17
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./Receiver/init.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./Receiver/extensions.sql:/docker-entrypoint-initdb.d/extensions.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${DB_SADB}
    restart: always

  infisical:
    image: infisical/infisical:latest-postgres
    container_name: infisical
    ports:
      - "8080:8080"
      - "8777:8777"
    environment:
      - DB_CONNECTION_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${DB_INFISICAL}
      - ENCRYPTION_KEY=${INFISICAL_ENCRYPTION_KEY}
      - AUTH_SECRET={INFISICAL_AUTH_SECRET}
      - SITE_URL=${INFISICAL_SITE_URL}
      - PORT=${INFISICAL_WEB_PORT}
      - HOST=${INFISICAL_HOST}
      - REDIS_URL=redis://redis:6379
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    restart: always

  rabbitmq:
    image: rabbitmq:4.1.2-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672" 	# AMQP port
      - "15672:15672" 	# Management UI
      - "25672:25672"   # Erlang Distribution Port
      - "4369:4369"     # Erlang Port Mapper Daemon
      - "15692:15692"   # Prometheus Metrics
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    
volumes:
  postgres-data:
  rabbitmq-data:
  redis-data:

