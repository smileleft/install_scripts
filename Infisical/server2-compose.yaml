version: '3.8'

services:
  infisical:
    image: infisical/infisical:latest-postgres
    container_name: infisical
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://infisical:infisical@postgres:5432/infisical
      - REDIS_URL=redis://redis:6379
    ports:
      - "8080:8080"
    restart: unless-stopped

  etcd:
    image: quay.io/coreos/etcd:v3.6.4
    container_name: etcd
    environment:
      - SERVER-1=${SERVER-1}
      - SERVER-2=${SERVER-2}
      - SERVER-3=${SERVER-3}
    command: >
      etcd -name etcd2
           -initial-advertise-peer-urls http://${SERVER-2}:2380
           -listen-peer-urls http://0.0.0.0:2380
           -listen-client-urls http://0.0.0.0:2379
           -advertise-client-urls http://${SERVER-2}:2379
           -initial-cluster etcd1=http://${SERVER-1}:2380,etcd2=http://${SERVER-2}:2380,etcd3=http://${SERVER-3}:2380
           -initial-cluster-token etcd-cluster
           -initial-cluster-state **existing

  postgres:
    image: smileleft/patroni:latest
    container_name: postgres
    environment:
      - PATRONI_NAME=postgres2
      - PATRONI_ETCD_HOSTS=${SERVER-1}:2379,${SERVER-2}:2379,${SERVER-3}:2379
      - PATRONI_SCOPE=infisical
      - PATRONI_POSTGRESQL_DATA_DIR=/pgdata
      - PATRONI_REST_API_CONNECT_ADDRESS=${SERVER-2}:8008
      - PATRONI_POSTGRESQL_CONNECT_ADDRESS=${SERVER-2}:5432
      - PATRONI_SUPERUSER_USERNAME=postgres
      - PATRONI_SUPERUSER_PASSWORD=postgres
      - PATRONI_REPLICATION_USERNAME=replicator
      - PATRONI_REPLICATION_PASSWORD=replicator
      - PATRONI_ADMIN_USERNAME=admin
      - PATRONI_ADMIN_PASSWORD=admin
    volumes:
      - pgdata:/pgdata
    ports:
      - "5432:5432"
      - "8008:8008"
    depends_on:
      - etcd

  redis:
    image: redis:7-alpine
    container_name: redis
    environment:
      - SERVER-2=${SERVER-2}
    command: >
      redis-server --port 6379
                   --cluster-enabled yes
                   --cluster-config-file nodes.conf
                   --cluster-node-timeout 5000
                   --appendonly yes
                   --cluster-announce-ip ${SERVER-2}
                   --cluster-announce-port 6379
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

volumes:
  pgdata:
  redis_data:
